name: Build, Test & Push to Docker Hub

on:
  push:
    branches:
      - main
      - develop
      - release-*
  pull_request:
    branches:
      - main
      - release-*

jobs:
  build_test_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies for back-end
        run: |
          cd back
          pip install --no-cache-dir -r requirements.txt
          pip install pytest

      - name: Run tests for back-end
        run: |
          cd back
          pytest --maxfail=1 --disable-warnings || exit 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      # Build the back-end Docker image
      - name: Build back-end Docker image
        run: |
          docker build -f back/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/my-python-backend:latest .

      # Build the front-end Docker image
      - name: Build front-end Docker image
        run: |
          docker build -f front/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/my-python-frontend:latest .

      # Tag back-end Docker image
      - name: Tag back-end Docker image
        run: |
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/my-python-backend:latest ${{ secrets.DOCKERHUB_USERNAME }}/my-python-backend:${{ github.sha }}

      # Tag front-end Docker image
      - name: Tag front-end Docker image
        run: |
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/my-python-frontend:latest ${{ secrets.DOCKERHUB_USERNAME }}/my-python-frontend:${{ github.sha }}

      # Run back-end container to test if the back-end is working
      - name: Run back-end Container
        run: |
          docker run -d -p 5000:5000 --name my-python-backend ${{ secrets.DOCKERHUB_USERNAME }}/my-python-backend:latest

      - name: Test if back-end Container is Running
        run: |
          sleep 5
          for i in {1..10}; do
            if curl --fail http://127.0.0.1:5000/; then
              echo "Back-end server is up!"
              exit 0
            fi
            echo "Back-end server not ready, retrying ($i/10)..."
            sleep 2
          done
          echo "Back-end server did not start in time."
          exit 1

      # Run front-end container to test if the front-end is working
      - name: Run front-end Container
        run: |
          docker run -d -p 80:80 --name my-python-frontend ${{ secrets.DOCKERHUB_USERNAME }}/my-python-frontend:latest

      - name: Test if front-end Container is Running
        run: |
          sleep 5
          for i in {1..10}; do
            if curl --fail http://127.0.0.1/; then
              echo "Front-end server is up!"
              exit 0
            fi
            echo "Front-end server not ready, retrying ($i/10)..."
            sleep 2
          done
          echo "Front-end server did not start in time."
          exit 1

      # Push back-end Docker image to Docker Hub
      - name: Push back-end Docker image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-python-backend:latest,${{ secrets.DOCKERHUB_USERNAME }}/my-python-backend:${{ github.sha }}

      # Push front-end Docker image to Docker Hub
      - name: Push front-end Docker image to Docker Hub
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/my-python-frontend:latest,${{ secrets.DOCKERHUB_USERNAME }}/my-python-frontend:${{ github.sha }}
