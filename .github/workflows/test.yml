name: Run Tests on Push

on:
  push:
    branches:
      - 'feature/**'
  pull_request:
    branches:
      - main

jobs:
  build_test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          cd back
          pip install --no-cache-dir -r requirements.txt
          pip install pytest

      - name: Run tests for back-end
        run: |
          cd back
          pytest --maxfail=1 --disable-warnings || exit 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build back-end Docker image
        run: |
          docker build -f back/Dockerfile -t ${{ secrets.DOCKERHUB_USERNAME }}/my-python-weather:latest ./back

      - name: Check if back-end Docker image exists
        run: |
          docker images ${{ secrets.DOCKERHUB_USERNAME }}/my-python-weather

      - name: Run back-end container
        run: |
          docker run -d -p 5000:5000 --name my-python-weather ${{ secrets.DOCKERHUB_USERNAME }}/my-python-weather:latest

      - name: Test if back-end API is running
        run: |
          sleep 5
          for i in {1..10}; do
            if curl --fail http://127.0.0.1:5000/api/alerts?state=CA; then
              echo "✅ Weather API is up and running!"
              exit 0
            fi
            echo "API not ready, retrying ($i/10)..."
            sleep 2
          done
          echo "❌ API did not start in time."
          exit 1

      - name: Push back-end Docker image to Docker Hub
        if: success()
        run: |
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/my-python-weather:latest ${{ secrets.DOCKERHUB_USERNAME }}/my-python-weather:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-python-weather:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-python-weather:${{ github.sha }}